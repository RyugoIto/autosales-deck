#!/usr/bin/env python
import os, datetime, pdfkit, markdown2, click
from pathlib import Path

CSS_FILE = "style.css"

TEMPLATE_MD = """# {title}

## Problem
{problem}

## Solution
{solution}

## Strength / USP
{usp}

---

*AutoSales Deck – generated on {date}*
"""

CSS_HEAD = """<style>
body{{ font-family: "Yu Gothic", Meiryo, sans-serif; margin:40px; }}
h1{{ color:#0F4CFF; }}
h2{{ color:#333; border-bottom:1px solid #ddd; padding-bottom:4px; }}
</style>
"""

@click.command()
@click.option("--theme", default="basic", help="theme name (basic only for v0.1)")
@click.option("--slides", default=5, help="max slide count (basic: 5)")
def main(theme: str, slides: int):
    """AutoSales Deck v0.1 – generate Markdown & PDF"""
    click.echo("📑 AutoSales Deck – v0.1 (MVP)")

    title = click.prompt("サービス名 / プロダクト名")
    problem = click.prompt("顧客の課題 (1 行)")
    solution = click.prompt("提供する解決策 (1 行)")
    usp = click.prompt("他社との違い・強み (1 行)")

    md_content = TEMPLATE_MD.format(
        title=title, problem=problem,
        solution=solution, usp=usp,
        date=datetime.datetime.now().strftime("%Y-%m-%d %H:%M")
    )

    out_dir = Path("output")
    out_dir.mkdir(exist_ok=True)
    md_path = out_dir / f"{title}_deck.md"
    pdf_path = out_dir / f"{title}_deck.pdf"

    md_path.write_text(md_content, encoding="utf-8")
    html = markdown2.markdown(md_content) + CSS_HEAD
    options = {
    "encoding": "utf-8",
    "footer-center": "Generated by AutoSales Deck (Lite)",
    "footer-font-size": "8",
    }
    pdfkit.from_string(
        html, str(pdf_path),
        configuration=config,
        css=CSS_FILE,
        options=options
    )

    click.secho(f"✅ Markdown saved to {md_path}", fg="green")
    click.secho(f"✅ PDF saved to     {pdf_path}", fg="green")

if __name__ == "__main__":
    main()
